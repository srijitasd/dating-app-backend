{
  "openapi": "3.0.0",
  "info": {
    "title": "User Authentication API",
    "version": "1.0.0",
    "description": "API for user registration, login, and token refresh functionalities."
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Development server"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Creates a new user with the provided details, then returns access and refresh tokens.",
        "tags": [
          [
            "Authentication"
          ]
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "contact_no": {
                    "type": "string"
                  },
                  "location": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Point"
                        ]
                      },
                      "coordinates": {
                        "type": "array",
                        "items": {
                          "type": "number"
                        },
                        "example": [
                          22.572645,
                          88.363892
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "name",
                  "email",
                  "contact_no",
                  "location"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The user ID",
                          "example": "660a7a7cd27679ae0fb8b549"
                        },
                        "name": {
                          "type": "string",
                          "example": "John"
                        },
                        "email": {
                          "type": "string",
                          "example": "John@example.com"
                        },
                        "images": {
                          "type": "array",
                          "description": "List of reordered images",
                          "items": {
                            "type": "object",
                            "properties": {
                              "file": {
                                "type": "string",
                                "example": "https://image.example.com"
                              },
                              "index": {
                                "type": "number"
                              }
                            }
                          }
                        },
                        "dob": {
                          "type": "date",
                          "example": "2001/03/29"
                        },
                        "age": {
                          "type": "number",
                          "example": 18
                        },
                        "preferences": {
                          "type": "object",
                          "properties": {
                            "interests": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "List of user interests"
                            },
                            "ageRange": {
                              "type": "object",
                              "properties": {
                                "min": {
                                  "type": "integer",
                                  "minimum": 18,
                                  "default": 18,
                                  "description": "Minimum age in the range"
                                },
                                "max": {
                                  "type": "integer",
                                  "minimum": 18,
                                  "default": 100,
                                  "description": "Maximum age in the range"
                                }
                              }
                            },
                            "maxDistance": {
                              "type": "object",
                              "properties": {
                                "unit": {
                                  "type": "string",
                                  "enum": [
                                    "km",
                                    "mi"
                                  ],
                                  "default": "km",
                                  "description": "Unit of maximum distance"
                                },
                                "value": {
                                  "type": "number",
                                  "minimum": 0,
                                  "default": 100,
                                  "description": "Maximum distance value"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "accessToken": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Log in a user",
        "description": "Authenticates the user with email and password, then returns access and refresh tokens.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/token/refresh": {
      "post": {
        "summary": "Refresh access token",
        "description": "Refreshes the access token using the provided refresh token and user ID.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "userId",
                  "refreshToken"
                ]
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    },
                    "refreshToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Token invalid or expired",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The user ID",
            "example": "660a7a7cd27679ae0fb8b549"
          },
          "name": {
            "type": "string",
            "example": "John"
          },
          "email": {
            "type": "string",
            "example": "John@example.com"
          },
          "images": {
            "type": "array",
            "description": "List of reordered images",
            "items": {
              "type": "object",
              "properties": {
                "file": {
                  "type": "string",
                  "example": "https://image.example.com"
                },
                "index": {
                  "type": "number"
                }
              }
            }
          },
          "dob": {
            "type": "date",
            "example": "2001/03/29"
          },
          "age": {
            "type": "number",
            "example": 18
          },
          "preferences": {
            "type": "object",
            "properties": {
              "interests": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of user interests"
              },
              "ageRange": {
                "type": "object",
                "properties": {
                  "min": {
                    "type": "integer",
                    "minimum": 18,
                    "default": 18,
                    "description": "Minimum age in the range"
                  },
                  "max": {
                    "type": "integer",
                    "minimum": 18,
                    "default": 100,
                    "description": "Maximum age in the range"
                  }
                }
              },
              "maxDistance": {
                "type": "object",
                "properties": {
                  "unit": {
                    "type": "string",
                    "enum": [
                      "km",
                      "mi"
                    ],
                    "default": "km",
                    "description": "Unit of maximum distance"
                  },
                  "value": {
                    "type": "number",
                    "minimum": 0,
                    "default": 100,
                    "description": "Maximum distance value"
                  }
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
